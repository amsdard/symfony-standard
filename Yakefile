docker-compose: docker-compose -f docker-compose-$ENV.yml $CMD
php: $BIN docker-compose exec php entrypoint php $CMD
console: $BIN php ./bin/console -e=$ENV $CMD
composer: $BIN php ./composer.phar --working-dir=/opt --optimize-autoloader $CMD
nodejs: "docker run -it --rm -w /usr/src/app
      -v $(pwd):/usr/src/app -v ~/.docker-node-cache:/home/node/cache -v ~/.ssh:/home/node/.ssh
      amsdard/node $CMD"

# aliases
npm: $BIN node npm $CMD
yarn: $BIN node yarn $CMD
bower: $BIN node bower $CMD
grunt: $BIN node grunt $CMD
gulp: $BIN node gulp $CMD

# Build & push to hub.amsdard.io, ie: `yake push data`
push:
  - $BIN docker-compose build $CMD
  - $BIN docker-compose push $CMD

# Up project.
up:
  - $BIN docker-compose up -d --force-recreate $CMD

# Starts all project containers.
start: $BIN docker-compose start $CMD

# Stops all project containers.
stop: $BIN docker-compose stop $CMD

# List all project containers.
ps: $BIN docker-compose ps $CMD

# Deletes all project containers.
down: $BIN docker-compose down -v --rmi=all $CMD

# Seeds database with sample user and site - for one time use per deployment.
populate:

# Fresh installation process - to be run one time
configure:
   - "[[ ! -f composer.phar ]] && curl -fsSL 'https://getcomposer.org/composer.phar' -o ./composer.phar"
   - "[[ -f config.env ]] && exit"
   - export SECRET=$(cat /dev/urandom | env LC_CTYPE=C tr -dc 'a-zA-Z0-9' | fold -w 40 | head -n 1)
   - cp ./config.env.dist ./config.env
   - sed -i'' "s/{secret}/$SECRET/g" ./config.env
   - echo "enter project name (lowercase):"
   - read projectname
   - sed -i'' "s/{projectname}/$projectname/g" ./docker-compose-dev.yml
   - sed -i'' "s/{projectname}/$projectname/g" ./docker-compose-rancher.yml

# default values
_config:
  FORCE_ALL: 1
  ENV: dev